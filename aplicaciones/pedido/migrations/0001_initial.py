# Generated by Django 2.1.7 on 2022-06-28 20:57

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('empresa', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConfigRestriccion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conf_r_fecha_inicio', models.DateField(verbose_name='Fecha inicio')),
                ('conf_r_fecha_fin', models.DateField(verbose_name='Fecha final')),
                ('conf_r_tipo_pedido', models.IntegerField(choices=[(1, 'Papeleria'), (2, 'Limpieza'), (3, 'Limpieza Consultorio'), (4, 'Toner'), (5, 'Papeleria consultorio'), (6, 'Toner consultorio'), (7, 'Globos'), (8, 'Limpieza oficina')], default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Configuracion_pedido',
            fields=[
                ('conf_ID', models.AutoField(primary_key=True, serialize=False)),
                ('conf_fecha_inicio', models.DateField(verbose_name='Fecha inicio')),
                ('conf_fecha_fin', models.DateField(verbose_name='Fecha final')),
                ('conf_fecha_fin_autorizador', models.DateField(default=django.utils.timezone.now, verbose_name='Fecha final para autorizar')),
            ],
        ),
        migrations.CreateModel(
            name='DetallePedido',
            fields=[
                ('dtl_id_detalle', models.AutoField(primary_key=True, serialize=False)),
                ('dtl_cantidad', models.IntegerField(verbose_name='Cantidad de producto')),
                ('dtl_codigo', models.CharField(max_length=11, verbose_name='código del producto')),
                ('dtl_descripcion', models.CharField(max_length=400, verbose_name='Descripción del producto')),
                ('dtl_precio', models.FloatField(verbose_name='Precio de producto')),
                ('dtl_tipo', models.IntegerField(choices=[(1, 'Papeleria'), (2, 'Limpieza')])),
                ('dtl_tipo_pedido', models.IntegerField(choices=[(1, 'Papeleria'), (2, 'Limpieza'), (3, 'Limpieza Consultorio'), (4, 'Toner'), (5, 'Papeleria consultorio'), (6, 'Toner consultorio'), (7, 'Globos'), (8, 'Limpieza oficina')], default=0)),
                ('dtl_status', models.BooleanField(default=False, verbose_name='status')),
            ],
        ),
        migrations.CreateModel(
            name='Pedido',
            fields=[
                ('ped_id_ped', models.AutoField(primary_key=True, serialize=False)),
                ('ped_fechaCreacion', models.DateField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('ped_fechaAutorizacion', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de autorización')),
                ('ped_fechaCancelacion', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de cancelación')),
                ('ped_estatusPedido', models.IntegerField(choices=[(1, 'Pendiente por autorizar'), (2, 'Autorizado'), (3, 'Facturado'), (4, 'Rechazado'), (5, 'Entregado'), (6, 'Excel descargado')], default=1)),
                ('ped_autorizo_fuera_tiempo', models.BooleanField(default=False)),
                ('ped_pdffac', models.FileField(blank=True, null=True, upload_to='PdfFAC/', verbose_name='PDF de factura')),
                ('ped_xmlfac', models.FileField(blank=True, null=True, upload_to='xmlFAC/', verbose_name='XML de factura')),
                ('ped_fechaSubidaFac', models.DateTimeField(blank=True, null=True, verbose_name='Carga de factura')),
                ('dtl_tipo_pedido', models.IntegerField(choices=[(1, 'Papeleria'), (2, 'Limpieza'), (3, 'Limpieza Consultorio'), (4, 'Toner'), (5, 'Papeleria consultorio'), (6, 'Toner consultorio'), (7, 'Globos'), (8, 'Limpieza oficina')], default=0)),
                ('pedido_tipo_insumo', models.IntegerField(choices=[(800044556, 'Insumos Pedido Mensual'), (800044563, 'Papeleria Pedido Mensual')], default=800044556)),
                ('ped_entregado', models.BooleanField(default=False, verbose_name='Entregado')),
                ('ped_fechaEntrega', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de entrega')),
                ('ped_id_Suc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='empresa.Sucursal', verbose_name='Sucursales')),
            ],
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prod_codigo', models.CharField(max_length=11, unique=True, verbose_name='código del producto')),
                ('prod_rutaimg', models.ImageField(upload_to='imgPrductos/', verbose_name='imagen')),
                ('prod_descripcion', models.CharField(max_length=400, verbose_name='Descripción del producto')),
                ('prod_precio', models.FloatField(verbose_name='Precio de producto')),
                ('prod_tipo', models.IntegerField(choices=[(1, 'Papeleria'), (2, 'Limpieza'), (3, 'Limpieza Consultorio'), (4, 'Toner'), (5, 'Papeleria consultorio'), (6, 'Toner consultorio'), (7, 'Globos'), (8, 'Limpieza oficina')], verbose_name='Tipo de producto')),
                ('prod_estado_producto', models.BooleanField(default=True, verbose_name='Estatus del producto')),
                ('prod_v_papeleria', models.BooleanField(default=False, verbose_name='Visible en papeleria')),
                ('prod_v_limpieza', models.BooleanField(default=False, verbose_name='Visible en Limpieza')),
                ('prod_v_limpieza_consultorio', models.BooleanField(default=False, verbose_name='Visible en Limpieza Consultorio')),
                ('prod_v_papeleria_consultorio', models.BooleanField(default=False, verbose_name='Visible en papeleria Consultorio')),
                ('prod_v_consumibles', models.BooleanField(default=False, verbose_name='Visible en Toner')),
                ('prod_v_toner_consultorio', models.BooleanField(default=False, verbose_name='Visible en Toner Consultorio')),
                ('prod_v_globos', models.BooleanField(default=False, verbose_name='Visible Globos')),
                ('prod_v_limpieza_oficina', models.BooleanField(default=False, verbose_name='Visible Limpieza oficina')),
            ],
        ),
    ]
